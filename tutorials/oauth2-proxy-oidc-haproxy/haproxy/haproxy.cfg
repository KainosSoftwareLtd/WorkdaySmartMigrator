global
    log stdout local0 debug
    daemon
    lua-load /usr/local/share/lua/5.3/jwtverify.lua

    # do not harcode env variables in haproxy.cfg - they should be set externally by docker/kubernetes
    # below example is just a summary of available configuration options

    # Set env variables used by Lua file
    # setenv OAUTH_PUBKEY_PATH /etc/haproxy/pem/keycloak.pem

    # OPTIONAL: OAuth issuer
    # setenv OAUTH_ISSUER http://keycloak.localtest.me:9080/auth/realms/master

    # OPTIONAL: OAuth audience
    # not set because we use 2 different audiences
    # when using oauth2-proxy only the audience would be:
    # setenv OAUTH_AUDIENCE oauth2-proxy
    # when using Keycloak REST API only the audience would be:
    # setenv OAUTH_AUDIENCE account

defaults
    timeout connect 5s
    timeout client  5s
    timeout server  5s
    mode http
    log global

frontend api_gateway
    bind :8080

    # API v1
    # Deny all requests
    http-request deny if { path_beg /v1 }

    # Deny if no Authorization header sent
    http-request deny unless { req.hdr(authorization) -m found }

    # Invoke the jwtverify Lua file
    http-request lua.jwtverify

    # Deny unless jwtverify set 'authorized' to true
    http-request deny unless { var(txn.authorized) -m bool }

    # API v2
    # /v2/config available to only migrator_admin role
    http-request deny if { path_beg /v2/config } ! { var(txn.roles) -m sub migrator_admin }
    # /v2/service available to migrator_user role
    http-request deny if { path_beg /v2/service } ! { var(txn.roles) -m sub migrator_user }

    use_backend be_migrator

backend be_migrator
    balance roundrobin
    server s1 migrator:8080
